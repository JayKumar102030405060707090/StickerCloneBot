from pyrogram import Client, filters
import requests

@Client.on_message(filters.sticker & filters.private)
async def clone_sticker(client, message):
    sticker_set_name = message.sticker.set_name
    if not sticker_set_name:
        await message.reply_text("тЭМ рдпрд╣ рд╕рд┐рдВрдЧрд▓ Sticker рд╣реИ, рдХреЛрдИ Sticker Pack рдирд╣реАрдВред")
        return

    await message.reply_text(f"ЁЯФД Cloning `{sticker_set_name}`...")

    # Telegram API рд╕реЗ Sticker Pack Details рдирд┐рдХрд╛рд▓рдирд╛
    sticker_set = await client.get_sticker_set(sticker_set_name)
    stickers = [s.file_id for s in sticker_set.stickers]

    new_set_name = f"cloned_{sticker_set_name}"  # рдирдпрд╛ рдирд╛рдо
    new_title = "My Custom Sticker Pack"  # рддреБрдореНрд╣рд╛рд░рд╛ рдирдпрд╛ рдЯрд╛рдЗрдЯрд▓

    # рдирдпрд╛ Sticker Pack рдмрдирд╛рдирд╛
    success = await client.create_new_sticker_set(
        user_id=message.from_user.id,
        name=new_set_name,
        title=new_title,
        emojis="ЁЯФе",
        png_sticker=stickers[0]  # рдкрд╣рд▓рд╛ рд╕реНрдЯрд┐рдХрд░ рдЬреЛрдбрд╝рдирд╛
    )

    if success:
        await message.reply_text(f"тЬЕ Sticker Pack Clone рд╣реБрдЖ: [ЁЯФЧ Open](https://t.me/addstickers/{new_set_name})")
    else:
        await message.reply_text("тЭМ Sticker Pack Clone рдХрд░рдиреЗ рдореЗрдВ рджрд┐рдХреНрдХрдд рдЖрдИред")
